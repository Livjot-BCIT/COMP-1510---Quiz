{
  "02_01": "MongoDB is a NoSQL database, which means it doesn't use tables and rows like relational databases.",
  "02_02": "In MongoDB, a collection is a group of documents, similar to a table in relational databases.",
  "02_03": "The insertOne() method adds a new document to a MongoDB collection.",
  "02_04": "MongoDB stores data in a JSON-like format called BSON, which supports more data types than JSON.",
  "02_05": "A collection in MongoDB is equivalent to a table in a relational database.",
  "02_06": "The find() method retrieves all documents in a collection that match a given query.",
  "02_07": "CRUD stands for Create, Read, Update, and Deleteâ€”the four main operations for managing data.",
  "02_08": "The _id field in MongoDB uniquely identifies each document in a collection.",
  "02_09": "You connect to MongoDB in Node.js using the MongoClient object from the mongodb package.",
  "02_10": "The updateOne() method in MongoDB updates a single document that matches a filter.",
  "02_11": "A schema in Mongoose defines the structure of documents within a collection.",
  "02_12": "The deleteOne() method removes a single document that matches the specified filter.",
  "02_13": "The findOne() method retrieves a single document that matches a query.",
  "02_14": "Mongoose is an ODM library that helps Node.js apps connect to and interact with MongoDB.",
  "02_15": "NoSQL injection is a security issue where unsanitized user input is used in a database query, leading to unauthorized access or changes.",
  "02_16": "Prevent NoSQL injection by using parameterized queries and validating or sanitizing all user input.",
  "02_17": "db.users.find({ name: 'Alice' }) finds documents in the 'users' collection with the name 'Alice'.",
  "02_18": "The projection parameter in find() lets you specify which fields to include or exclude from the results.",
  "02_19": "The createIndex() method is used to create an index on a collection field, improving query performance.",
  "02_20": "In MongoDB, documents within a collection can have different fields and structures.",
  "02_21": "The save() method in Mongoose either creates a new document or updates an existing one in the database.",
  "02_22": "The updateMany() method updates all documents in a collection that match the filter.",
  "02_23": "The findById() method in Mongoose finds a document by its _id value.",
  "02_24": "The mongodb package is commonly used in Node.js for connecting to a MongoDB database using promises.",
  "02_25": "The collection.drop() method deletes an entire collection from the database.",
  "02_26": "The findOne() method retrieves a single document from a MongoDB collection that matches a filter.",
  "02_27": "A Schema in Mongoose defines the shape and types of fields for documents in a collection.",
  "02_28": "The updateMany() method in MongoDB updates all documents that match a specified filter.",
  "02_29": "The _id field is a unique identifier automatically added to every document in MongoDB.",
  "02_30": "The $gt operator is used in queries to match values greater than a specified number.",
  "02_31": "The .save() method in Mongoose saves a document to the database, either creating or updating it.",
  "02_32": "MongoDB is a NoSQL database, meaning it uses documents and collections instead of tables and rows.",
  "02_33": "mongoose.connect() is the method for connecting a Mongoose app to a MongoDB database.",
  "02_34": "A collection in MongoDB is a group of documents that share a similar structure.",
  "02_35": "Setting required: true in a Mongoose schema enforces that the field must be provided.",
  "02_36": "deleteMany({}) deletes all documents from a collection in MongoDB.",
  "02_37": ".find() in Mongoose retrieves all documents from a model that match a query.",
  "02_38": "NoSQL stands for 'Not only SQL', indicating support for various data storage models.",
  "02_39": "The mongod command starts the MongoDB server on your local machine.",
  "02_40": "Validating user input is key to preventing NoSQL injection attacks.",
  "02_41": ".deleteOne() removes one document from a collection that matches a filter.",
  "02_42": "The limit() method restricts the number of results returned in a MongoDB query.",
  "02_43": ".find({ field: /text/ }) uses a regular expression to match documents containing specific text.",
  "02_44": "The default property in a Mongoose schema sets a default value for a field if none is provided.",
  "02_45": "If a document fails schema validation in Mongoose, an error is thrown.",
  "02_46": "Embedding documents in MongoDB is used for one-to-many relationships.",
  "02_47": "MongoDB stores data as JSON-like documents called BSON.",
  "02_48": "You can stop the MongoDB server by pressing ctrl+c in the terminal where it is running.",
  "02_49": "The 'show collections' command lists all collections in the current MongoDB database.",
  "02_50": "Setting unique: true in a Mongoose schema ensures the field has only unique values."
}
