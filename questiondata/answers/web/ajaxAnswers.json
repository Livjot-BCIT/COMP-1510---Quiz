{
  "06_01": "AJAX stands for Asynchronous JavaScript and XML. It allows web pages to communicate with servers and update content asynchronously without reloading the page.",
  "06_02": "The XMLHttpRequest object is used in JavaScript to send and receive data from a server in AJAX requests.",
  "06_03": "A key advantage of AJAX is that it allows parts of a web page to update without refreshing the entire page, improving speed and user experience.",
  "06_04": "The open() method of XMLHttpRequest initializes a request by specifying the method (GET, POST, etc.), URL, and whether the request is asynchronous.",
  "06_05": "A readyState value of 4 means the XMLHttpRequest operation is complete and the response is ready to use.",
  "06_06": "GET is the most common HTTP method for retrieving data from a server with AJAX.",
  "06_07": "The Fetch API is a modern alternative to XMLHttpRequest, providing a simpler way to make asynchronous requests in JavaScript.",
  "06_08": "To send a JSON object with fetch, you use JSON.stringify() on your object for the body and set the Content-Type header to application/json.",
  "06_09": "The onreadystatechange event handler tracks changes in the readyState property of an XMLHttpRequest, helping detect when the request completes.",
  "06_10": "You access the server's response as plain text from an XMLHttpRequest by reading the responseText property.",
  "06_11": "The Fetch API returns a Promise, allowing you to handle asynchronous operations with then() and catch().",
  "06_12": ".catch() lets you handle errors or failed requests in fetch, since fetch returns a Promise.",
  "06_13": "The status property of XMLHttpRequest gives you the HTTP status code (like 200, 404) for the response.",
  "06_14": "When sending JSON, set the Content-Type header to application/json so the server knows the format of the data being sent.",
  "06_15": "response.json() parses the body of the response as JSON, converting it from a JSON string into a JavaScript object.",
  "06_16": "AJAX's benefit is that it prevents full page reloads; requiring a full page reload is actually a drawback and the opposite of AJAX's purpose.",
  "06_17": "HTTP status code 404 means 'Not Found', indicating the requested resource doesn't exist on the server.",
  "06_18": "The readyState property of XMLHttpRequest is used to check if a request is complete. When it's 4, the operation is done.",
  "06_19": "CORS stands for Cross-Origin Resource Sharing. It's a security feature that lets browsers allow or block requests between different domains.",
  "06_20": ".catch() is used with fetch() Promises to handle errors that occur during the network request.",
  "06_21": "To send JSON with fetch, you must use JSON.stringify(data) as the body and set the Content-Type header to application/json.",
  "06_22": "The send() method in XMLHttpRequest actually sends the request to the server after you have set it up with open()."
}
