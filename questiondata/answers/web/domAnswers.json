{
  "05_01": "DOM stands for Document Object Model. It's a programming interface that represents the structure of an HTML or XML document as a tree of objects.",
  "05_02": "document.getElementById() is used to select a single element from the DOM by its unique id attribute.",
  "05_03": "document.getElementsByClassName('note') returns a live collection of all elements that have the class 'note'.",
  "05_04": "document.querySelector() finds and returns the first element that matches a given CSS selector.",
  "05_05": "To change the text inside an element, you can set its textContent property to the new value.",
  "05_06": "The children property gives you all child elements (not text nodes or comments) of an element as an HTMLCollection.",
  "05_07": "document.createElement('div') creates a new div element, which can then be added to the DOM.",
  "05_08": "appendChild() adds a node as the last child of a parent node.",
  "05_09": "innerHTML lets you get or set the HTML markup (including tags) inside an element.",
  "05_10": "element.remove() deletes the element from the DOM tree.",
  "05_11": "The blur event is triggered when an input field loses focus.",
  "05_12": "addEventListener() attaches an event handler to a specified element without overwriting existing event handlers.",
  "05_13": "e.preventDefault() stops the browser's default action for that event, like submitting a form or following a link.",
  "05_14": "element.parentNode returns the node's parent in the DOM tree.",
  "05_15": "childNodes returns a collection of all child nodes, including elements, text, and comments.",
  "05_16": "The value property gets or sets the value of an input field.",
  "05_17": "document.querySelectorAll('p') selects all <p> elements and returns them as a static NodeList.",
  "05_18": "The style property allows you to get or set the inline CSS styles of an element.",
  "05_19": "insertBefore() inserts a node as a child of a parent, right before a specified existing child.",
  "05_20": "document.body refers to the <body> element of the HTML document.",
  "05_21": "getElementsByClassName() gives you a live HTMLCollection of all elements with the given class name.",
  "05_22": "querySelectorAll() returns a static NodeList of all elements that match the given CSS selector.",
  "05_23": "cloneNode(true) creates a deep copy of the element and all its descendants (children, grandchildren, etc).",
  "05_24": "childNodes property gives you all child nodes, including element, text, and comment nodes.",
  "05_25": "classList.add('active') adds the class 'active' to the element's list of classes.",
  "05_26": "e.stopPropagation() stops the event from bubbling up the DOM tree, preventing parent handlers from being triggered.",
  "05_27": "element.dataset lets you access custom data attributes. For data-user, use element.dataset.user.",
  "05_28": "element.remove() removes the element from the DOM.",
  "05_29": "document.activeElement returns the element currently focused by the user (such as an input or button).",
  "05_30": "Event delegation means adding one listener to a parent, then using event.target to handle events from its children efficiently."
}
