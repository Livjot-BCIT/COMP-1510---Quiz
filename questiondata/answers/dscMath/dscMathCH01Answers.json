{
  "01_01": "A statement in logic is a sentence that is either true or false, such as 'The sky is blue.' Questions or commands are not statements.",
  "01_02": "The correct negation of 'If it is raining, then the ground is wet' is 'It is raining and the ground is not wet.' A negation must show the only case where the original is false.",
  "01_03": "Logically equivalent statements always have the same truth values—they are either both true or both false in every scenario.",
  "01_04": "'p → q' is logically equivalent to '~q → ~p' (the contrapositive). This means if the result is false, the condition must also be false.",
  "01_05": "'p ∧ ~p' means both p and not p at the same time, which is never possible. It is always false.",
  "01_06": "The converse of 'If I eat pizza, then I am happy' switches the statements: 'If I am happy, then I eat pizza.'",
  "01_07": "The form 'If p then q. p. Therefore, q.' is Modus Ponens, which is a valid logical argument.",
  "01_08": "The contrapositive of 'If you study, you pass' is 'If you do not pass, you did not study.' It switches and negates both parts.",
  "01_09": "Two statements are logically equivalent if they are true at the same time in every possible situation.",
  "01_10": "The negation of 'p ∨ q' is '~p ∧ ~q' (DeMorgan's Law). It means both p and q are not true.",
  "01_11": "Modus Tollens is: 'If p then q. Not q. Therefore, not p.' It is a valid argument form.",
  "01_12": "A disjunction is a logical 'or', written as 'p ∨ q'. It is true if at least one part is true.",
  "01_13": "'If p then q. p. Therefore, q.' is a valid argument form, also known as Modus Ponens.",
  "01_14": "A biconditional is 'p ↔ q', meaning p is true if and only if q is true.",
  "01_15": "'p ∨ ~p' is always true, no matter the value of p. This is called a tautology.",
  "01_16": "The converse of 'If it is sunny, I will go running' is 'If I go running, then it is sunny.' The order is reversed.",
  "01_17": "'Jump over the fence' is not a statement, because it is a command and cannot be true or false.",
  "01_18": "'p ∨ q, ~p, therefore q' is Disjunctive Syllogism: if one part is false, the other must be true.",
  "01_19": "'If I pass the test, then I studied' is written as 'pass → study' in logic.",
  "01_20": "The contrapositive of 'If I am not tired, then I will study' is 'If I do not study, then I am tired.'",
  "01_21": "The inverse of 'If it rains, then I bring an umbrella' is 'If it does not rain, then I do not bring an umbrella.' Both parts are negated.",
  "01_22": "'If it is snowing, the ground is cold. It is not snowing. Therefore, the ground is not cold.' is denying the antecedent, a logical error.",
  "01_23": "'p ∧ ~p' is always false. This is called a contradiction.",
  "01_24": "For 'p → q' to be false, p must be true and q must be false. In all other cases, it is true.",
  "01_25": "'If p then q, q, therefore p' is the converse error. The conclusion does not always follow.",
  "01_26": "'~(p ∧ q)' is logically equivalent to '~p ∨ ~q' by DeMorgan's Law.",
  "01_27": "'Either I will study or I will fail' is 'study ∨ fail' in logic.",
  "01_28": "A truth table for 'p ∨ q' is false only if both p and q are false.",
  "01_29": "'If p then q. Not p. Therefore, not q.' is not a valid inference; this is the inverse error.",
  "01_30": "The main connective in '~p ∧ (q ∨ r)' is ∧, because it joins the two parts of the statement.",
  "01_31": "The symbol '~' means logical negation (not). For example, ~p means 'not p'.",
  "01_32": "'^' is the symbol for conjunction, which means 'and'. For example, p ^ q means both p and q.",
  "01_33": "'v' is the symbol for disjunction, which means 'or'. For example, p v q means either p or q.",
  "01_34": "'~(p ∧ q)' means it is not true that both p and q are true. At least one is not true.",
  "01_35": "Disjunction (OR) is true if at least one part is true.",
  "01_36": "A tautology is a statement that is always true, like 'p or not p'.",
  "01_37": "Modus Tollens: If p → q and ~q, then ~p. If the result is false, the original must be false too.",
  "01_38": "The converse error is: 'If p → q and q, then p.' This is not always correct.",
  "01_39": "DeMorgan's Law: '~(p ∧ q) ≡ ~p ∨ ~q'. Negating an AND gives you an OR of negations.",
  "01_40": "If p is true and q is false, (p → q) is false. This is the only way an implication is false.",
  "01_41": "'p→q, p, therefore q' is Modus Ponens, a valid argument form.",
  "01_42": "If both p and q are false, (p v q) is false, so its negation is true.",
  "01_43": "A contradiction is a statement that is always false, no matter what.",
  "01_44": "The converse of 'If it rains, then the ground is wet' is 'If the ground is wet, then it rains.'",
  "01_45": "Assuming the inverse is equivalent to the original is called the inverse error."
}
