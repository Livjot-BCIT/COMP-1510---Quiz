 {
  "03_01": "let declares a variable with block scope, meaning it's only available inside the block where it's defined. This prevents issues with accidental variable overwrites.",
  "03_02": "typeof 'hello' returns 'string' because string literals are of type 'string' in JavaScript.",
  "03_03": "array is not a primitive type; JavaScript's primitive types are string, number, boolean, null, undefined, symbol, and bigint.",
  "03_04": "'===' checks for both value and type, so it is called strict equality.",
  "03_05": "parseInt() converts a string to an integer (whole number) in JavaScript.",
  "03_06": "Single-line comments in JavaScript begin with //.",
  "03_07": "const is used to declare a variable whose value cannot be reassigned after its initial assignment.",
  "03_08": "Adding a number and a string with + results in string concatenation, so 3 + '4' becomes '34'.",
  "03_09": "console.log() is used to output information to the browser console.",
  "03_10": "Square brackets [] are used to define arrays in JavaScript.",
  "03_11": "A function is declared using the function keyword: function greet() { }.",
  "03_12": "Variable names cannot start with a number in JavaScript.",
  "03_13": "push() adds an element to the end of an array.",
  "03_14": "pop() removes the last element, so after removing one element from [1, 2, 3], the array has length 2.",
  "03_15": "try is the keyword that begins a try-catch block for exception handling.",
  "03_16": "Array.isArray([1, 2, 3]) checks if the argument is an array, and returns true in this case.",
  "03_17": "shift() removes and returns the first element of an array.",
  "03_18": "for(let i=0;i<5;i++) is the correct way to create a loop that counts from 0 to 4.",
  "03_19": "x === '10' is false because 10 (number) is not strictly equal to '10' (string), so 'B' is printed.",
  "03_20": "The + operator joins (concatenates) strings in JavaScript.",
  "03_21": "== does loose comparison, so 2 == '2' is true.",
  "03_22": "Arrow functions in ES6 are written as: const sum = (a, b) => a + b;",
  "03_23": "indexOf() returns the index of a value in an array, or -1 if it's not found.",
  "03_24": "Math.floor() rounds a number down to the nearest integer.",
  "03_25": "The window object represents the browser window, and is the global object for client-side JavaScript.",
  "03_26": "The length property of an array returns the number of elements it contains.",
  "03_27": "push() adds an element to the end of an array.",
  "03_28": "toUpperCase() converts all letters in a string to uppercase.",
  "03_29": "if(condition) { ... } is the correct syntax for an if statement in JavaScript.",
  "03_30": "arr[0] accesses the first element of the array arr (arrays are zero-indexed).",
  "03_31": "const prevents a variable from being reassigned.",
  "03_32": "break exits a loop or switch statement immediately.",
  "03_33": "alert() displays a pop-up dialog with a message and an OK button.",
  "03_34": "!== checks if x is not equal to 10, and also checks the type.",
  "03_35": "setTimeout() schedules a function to be executed after a specified delay.",
  "03_36": "The length property returns the number of elements in an array.",
  "03_37": "/* comment */ is the correct way to write a multi-line comment in JavaScript.",
  "03_38": "0 is considered falsy in JavaScript, meaning it behaves like false in conditional expressions.",
  "03_39": "typeof null returns 'object' (this is actually a historical quirk in JavaScript).",
  "03_40": "JSON.parse() converts a JSON string into a JavaScript object.",
  "03_41": "JSON.stringify() converts a JavaScript object into a JSON string.",
  "03_42": "document.getElementById('main') selects the DOM element with id 'main'.",
  "03_43": "textContent changes the text inside an element.",
  "03_44": "'click' is the name of the event fired when a button is clicked.",
  "03_45": "addEventListener adds an event handler to the specified element.",
  "03_46": "Adding a string and a number using += results in string concatenation, so 5 + '5' = '55'.",
  "03_47": "pop() removes the last element from an array.",
  "03_48": "event.preventDefault() stops the default form submission in an event handler.",
  "03_49": "for...in loops are used to iterate over the keys of an object.",
  "03_50": "String() converts a value to a string.",
  "03_51": "Boolean('') is false because an empty string is a falsy value.",
  "03_52": "querySelectorAll('.test') selects all elements with the class 'test'.",
  "03_53": "addEventListener does not return any value; it returns undefined.",
  "03_54": "arr.includes('foo') checks if 'foo' is present in the array arr.",
  "03_55": "setInterval repeatedly calls a function every set amount of time (here, every 1 second).",
  "03_56": "slice() returns a shallow copy of a portion of an array without modifying the original.",
  "03_57": "delete obj.x removes the property x from the object obj.",
  "03_58": "event.target is the element that triggered the event.",
  "03_59": "map() creates a new array by applying a function to each element.",
  "03_60": "The spread operator (...) expands elements of an array or object.",
  "03_61": "Template literals in JavaScript are enclosed in backticks (`).",
  "03_62": "0 == false is true because of type coercion in loose equality comparisons.",
  "03_63": "If a function does not return a value, it returns undefined by default.",
  "03_64": "A closure is a function that has access to its outer function's variables, even after the outer function has finished.",
  "03_65": "class is used to create a class in ES6.",
  "03_66": "Inside an object's method, this refers to the object itself.",
  "03_67": "The Date object handles dates and times in JavaScript.",
  "03_68": "typeof NaN returns 'number' (even though NaN stands for 'Not a Number').",
  "03_69": "shift() removes the first element from an array and returns it.",
  "03_70": "'use strict'; enables strict mode, making some errors more visible and preventing unsafe actions.",
  "03_71": "Object.freeze(obj) makes an object immutable (its properties can't be changed).",
  "03_72": "filter() returns a new array with elements that pass a test function.",
  "03_73": "event.stopPropagation() prevents an event from bubbling up the DOM tree.",
  "03_74": "map(x => x * 2) creates a new array where each value is doubled: [2, 4, 6].",
  "03_75": "Default parameter values in functions are set using =, e.g., function foo(x = 10) {}.",
  "03_76": "An object literal is defined with curly braces: { name: 'Sam', age: 20 }.",
  "03_77": "sort() sorts the elements of an array in place.",
  "03_78": "Date.now() returns the current timestamp in milliseconds since January 1, 1970.",
  "03_79": "obj.x = 10; adds a property named x with value 10 to obj.",
  "03_80": "extends is the keyword for creating a subclass that inherits from another class.",
  "03_81": "export function foo() {} is the correct way to export a function in ES6 modules.",
  "03_82": "import * as utils from 'utils'; imports everything from the utils module as an object.",
  "03_83": "some() returns true if at least one array element passes the test function.",
  "03_84": "flat() flattens nested arrays one level deep.",
  "03_85": "find(x => x > 15) returns the first element greater than 15, which is 20."
}
